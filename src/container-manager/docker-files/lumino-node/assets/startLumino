#!/bin/bash

INIT_LOG=/root/init.log

exec 3>&1 4>&2
trap 'exec 2>&4 1>&3' 0 1 2 3
exec 1>${INIT_LOG} 2>&1

# Setup node to run rif-comms node
IP_ADDRESS=`echo $(hostname -I) | sed 's/ *$//g'`
RIF_COMMS_CONF_FILE="/root/rif-communications-pubsub-bootnode/config/server.json5"

echo $(sed "s/__IP_PLACEHOLDER__/${IP_ADDRESS}/" ${RIF_COMMS_CONF_FILE}) > ${RIF_COMMS_CONF_FILE}

echo $(sed "s/__BOOT_NODE_IP_PLACEHOLDER__/${BOOT_NODE_IP}/" ${RIF_COMMS_CONF_FILE}) > ${RIF_COMMS_CONF_FILE}

RIF_COMMS_KEY_PASSWORD="rif-comms-${IP_ADDRESS}"

echo $(sed "s/__PASSWORD_PLACEHOLDER__/${RIF_COMMS_KEY_PASSWORD}/" ${RIF_COMMS_CONF_FILE}) > ${RIF_COMMS_CONF_FILE}

cd /root/.rif-comms || exit 1
generateKey server ${RIF_COMMS_KEY_PASSWORD}

source /root/.nvm/nvm.sh && nvm use 14.13

cd /root/rif-communications-pubsub-bootnode || exit 1

# Run rif-comms with pm2

NODE_ENV=server pm2 start --name rif-comms npm -- run api-server

# Setup environment vars for lumino node

cd /root/lumino || exit 1

if [ "" == "${ENV_NAME}" ]; then
  ENV_NAME=nodeEnvironment
fi

if [ "" == "${TOKEN_NETWORK_REGISTRY}" ]; then
  TOKEN_NETWORK_REGISTRY="0x7f467DdFf135b9A3B4926D10cAf538987b4E57bd"
fi

if [ "" == "${SECRET_REGISTRY}" ]; then
  SECRET_REGISTRY="0x3898025e10D05426E9f1e57223643fdD92a77b6f"
fi

if [ "" == "${ENDPOINT_REGISTRY}" ]; then
  ENDPOINT_REGISTRY="0xB308902D18ea23B81c17E4Bf7AC027C2E7c31124"
fi

if [ "" == "${HUB_MODE}" ]; then
  HUB_MODE="disabled"
fi

if [ "" == "${RSK_ENDPOINT}" ]; then
  RSK_ENDPOINT="http://rsk-node:4444"
fi

if [ "" == "${NODE_PORT}" ]; then
  NODE_PORT="5001"
fi

if [ "" == "${NETWORK_ID}" ]; then
  NETWORK_ID="33"
fi

if [ "" == "${GRPC_PORT}" ]; then
  GRPC_PORT="6012"
fi

if [ "" == "${ETH_FUNDS}" ]; then
  ETH_FUNDS=100
fi

if [ "" == "${ACCOUNT_ADDRESS}" ]; then
  # generate and fund an account
  createAccounts infuy 1 ${ETH_FUNDS}
  ACCOUNT_ADDRESS=$(cat /root/.accounts)
  if [ "" != "${RIF_FUNDS}" ]; then
    fundAccountsWithToken ${ACCOUNT_ADDRESS} ${RIF_FUNDS} "RIF"
  fi
  if [ "" != "${LUM_FUNDS}" ]; then
    fundAccountsWithToken ${ACCOUNT_ADDRESS} ${LUM_FUNDS} "LUM"
  fi
fi

if [ "" == "${ACCOUNT_PASSWORD}" ]; then
  echo "infuy" > password-file.txt
else
  echo ${ACCOUNT_PASSWORD} > password-file.txt
fi

# Setup trap for Ctrl+C to stop lumino node and deactivate the environment and stop rif-comms

trap ctrl_c INT

function ctrl_c() {
  rm password-file.txt
  deactivate
	pm2 stop rif-comms
}

# Setup environment

source ${ENV_NAME}/bin/activate

# Setup the default command

COMMAND="lumino --address ${ACCOUNT_ADDRESS} --password-file password-file.txt --accept-disclaimer --transport=rif-comms --grpc-endpoint ${IP_ADDRESS}:${GRPC_PORT} --keystore-path ~/.ethereum/keystore --network-id ${NETWORK_ID} --eth-rpc-endpoint ${RSK_ENDPOINT} --environment-type development --tokennetwork-registry-contract-address=${TOKEN_NETWORK_REGISTRY} --secret-registry-contract-address=${SECRET_REGISTRY} --endpoint-registry-contract-address=${ENDPOINT_REGISTRY} --no-sync-check --api-address=http://0.0.0.0:${NODE_PORT}"

# Adding the flag if HUB_MODE is enabled

if [[ ${HUB_MODE} == "enabled" ]]; then
    COMMAND+=" --hub-mode"
fi

# Print out the env variables to check information on console

echo ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Starting Lumino Node <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"
echo "ENV_NAME=${ENV_NAME}"
echo "ACCOUNT_ADDRESS=${ACCOUNT_ADDRESS}"
echo "TOKEN_NETWORK_REGISTRY=${TOKEN_NETWORK_REGISTRY}"
echo "SECRET_REGISTRY=${SECRET_REGISTRY}"
echo "ENDPOINT_REGISTRY=${ENDPOINT_REGISTRY}"
echo "RSK_ENDPOINT=${RSK_ENDPOINT}"
echo "NETWORK_ID=${NETWORK_ID}"
echo "GRPC_PORT=${GRPC_PORT}"
echo "HUB_MODE=${HUB_MODE}"
echo "COMMAND=${COMMAND}"
echo ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Starting Lumino Node <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"

# Executing the lumino node

eval "${COMMAND}"

exit 0
